#!/usr/bin/env ruby_noexec_wrapper

require 'json'

command = ARGV.shift

config = { 'app_name' => nil }
dot_file_name = '.h_file'
if File.exists?(dot_file_name) 
  contents = File.open(dot_file_name).read
  if contents.size > 0
    config = JSON.parse contents
  end
else
end

app_name = config['app_name']
git_branch = `git branch | sed -n '/\* /s///p'` || 'master'

def exec_command_with_app_name(cmd, app_name)
  cmd << " --app #{app_name}" if app_name
  system cmd
end

def set_app
  app_name = ARGV.shift
  if app_name
    config['app_name'] = app_name
    puts "Set heroku app name to #{app_name}.\n"
  else
    config['app_name'] = nil
    puts "Unset heroku app.\n"
  end
  File.open(dot_file_name, File::WRONLY|File::CREAT) { |file| file.write config.to_json }
end

def deploy
  message = ARGV.shift || 'deploy to Heroku'
  puts "Using branch #{git_branch}.\n"
  puts "Adding new files to git...\n"
  `git add .`
  puts "Committing changes to git...\n"
  `git commit -a -m '#{message}'`
  puts "Pushing to source control...\n"
  `git push origin #{git_branch}`
  puts "Pushing to Heroku...\n"
  `git push heroku #{git_branch}`
end

def migrate
  puts "Migrating the database on Heroku...\n"
  exec_command_with_app_name 'heroku run rake db:migrate', app_name
end

def seed
  puts "Seeding the database on Heroku...\n"
  exec_command_with_app_name 'heroku run rake db:seed', app_name
end

def share_secrets
  puts "Sharing your app secrets with Heroku...\n"
  require 'rubygems'
  gem 'secretive'
  require 'secretive'
  
  if app_name.blank?
    msg = "You must specify an app name either with --app APP or by running "
    msg += "'h app APP' before running this command."
    puts msg
    exit
  end
  
  msg  = "This task will sync ALL ENVIRONMENT VARIABLES in the `#{app_name}` app "
  msg += "with the values defined in the `production` group of config/secrets.yml. "
  msg += "Are you sure you want to proceed? (y/n)"
  puts msg

  confirmation = $stdin.gets.chomp
  raise unless confirmation == "y"

  exec "heroku config:add #{Secretive.for_heroku('production')} --app #{app_name}"
end

case command
when 'app'
  set_app
  
when 'deploy'
  deploy
  
when 'migrate'
  migrate

when 'seed'
  seed
  
when 'console'
  puts "Running the console on Heroku...\n"
  exec_command_with_app_name 'heroku run console', app_name

when 'log'
  puts "Tailing the log on Heroku...\n"
  exec_command_with_app_name 'heroku logs --source app --num 100 --tail', app_name

when 'secrets'
  share_secrets
  
when 'dm'
  puts "Running full deployment.\n"
  exec_command_with_app_name 'heroku maintenance:on', app_name
  deploy
  migrate
  exec_command_with_app_name 'heroku maintenance:off', app_name
  
else
  msg = "This is the easy access script for common Heroku commands. \nThe following commands are available: \n"
  msg += "h app APP_NAME     Set the app name for subsequent h commands\n"
  msg += "h deploy MESSAGE   Runs git add, commit, push origin master, and push heroku\n"
  msg += "h secrets          Shares your app secrets in config/secrets.yml with your Heroku app\n"
  msg += "h log              Tails the Heroku log file plus the last 200 lines\n"
  msg += "h console          Brings up the Rails console for your Heroku app\n"
  msg += "h migrate          Runs rake db:migrate on the Heroku database\n"
  msg += "h seed             Runs rake db:seed on the Heroku database\n"
  msg += "h dm MESSAGE       Runs deploy and migrate in maintenance mode\n"
  puts msg
end
